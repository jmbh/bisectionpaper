pdf("Figure1_v2.pdf", height = 4, width=8)
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="x (Pixel)",
xlab="Normalized time",
cex.lab=1.1, main="(a) 9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
pdf("Figure1_v2_EBs.pdf", height = 4, width=8)
error_bars <- TRUE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="x (Pixel)",
xlab="Normalized time",
cex.lab=1.1, main="(a) 9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]+dd[,side-1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
side
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]+dd[,side-1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
pdf("Figure1_v2_EBs.pdf", height = 4, width=8)
error_bars <- TRUE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="x (Pixel)",
xlab="Normalized time",
cex.lab=1.1, main="(a) 9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
side
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
side1
side<-2
side <- 1
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+1], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
pdf("Figure1_v2_EBs.pdf", height = 4, width=8)
error_bars <- TRUE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="x (Pixel)",
xlab="Normalized time",
cex.lab=1.1, main="(a) 9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
pdf("Figure1_v2.pdf", height = 4, width=8)
error_bars <- FALSE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="x (Pixel)",
xlab="Normalized time",
cex.lab=1.1, main="(a) 9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="(b) 9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
# analyze
for(exp in 1:3) {
for(side in 1:2) {
print(paste("Condition", exp, "Side", side))
it <- stor_ttests[[exp]][[side]]
print("signf. from t step")
print(fromwhen <- 102-sum(it[,2]<.05))
print("mean t")
print(mean(it[,1][fromwhen:101]))
print(mean(it[,3]))
}
}
library(lme4)
library(plyr)
setwd("G:/bisectionpaper/_repository/4_Code")
dat <- readRDS("data_preprocessed.RDS")
#storage
stor_ttests <- list("exp1"=NULL, "exp2"=NULL, "exp3"=NULL)
stor_ttests[[1]] <- stor_ttests[[2]] <- stor_ttests[[3]] <- list("left"=matrix(0,101,3), "right"=matrix(0,101,3))
#calc
for(exp in 1:3) {
for(side in 0:1) {
for(t in 0:100)
{
subs <- dat[dat$exp==exp & dat$larger==side & dat$t == t,4]
tobj <- t.test(subs, y=NULL, mu=0)
stor_ttests[[exp]][[side+1]][t+1,1] <- tobj$statistic
stor_ttests[[exp]][[side+1]][t+1,2] <- tobj$p.value
stor_ttests[[exp]][[side+1]][t+1,3] <- tobj$parameter
#print(tobj$statistic)
}
}
}
# analyze
for(exp in 1:3) {
for(side in 1:2) {
print(paste("Condition", exp, "Side", side))
it <- stor_ttests[[exp]][[side]]
print("signf. from t step")
print(fromwhen <- 102-sum(it[,2]<.05))
print("mean t")
print(mean(it[,1][fromwhen:101]))
print(mean(it[,3]))
}
}
exp <- 2
side <- 1
it <- stor_ttests[[exp]][[side]]
it
side <- 0
it <- stor_ttests[[exp]][[side]]
eyp
exp
exp <- 2
side <- 1
it <- stor_ttests[[exp]][[side]]
it
side <- 2
it <- stor_ttests[[exp]][[side]]
it
# analyze
for(exp in 1:3) {
for(side in 1:2) {
print(paste("Condition", exp, "Side", side))
it <- stor_ttests[[exp]][[side]]
print("signf. from t step")
print(fromwhen <- 102-sum(it[,2]<.05))
print("mean t")
print(mean(it[,1][fromwhen:101]))
print(mean(it[,3]))
}
}
it <- stor_ttests[[2]][[2]]
it
# analyze
for(exp in 1:3) {
for(side in 1:2) {
print(paste("Condition", exp, "Side", side))
it <- stor_ttests[[exp]][[side]]
print("signf. from t step")
print(fromwhen <- 102-sum(it[,2]<.05))
print("mean t")
print(mean(it[,1][fromwhen:101]))
print(mean(it[,3]))
}
}
it
it <- stor_ttests[[2]][[1]]
it
it <- stor_ttests[[2]][[2]]
stor_ttests[[2]][[2]]
stor_ttests[[2]][[1]]
# analyze
for(exp in 1:3) {
for(side in 1:2) {
print(paste("Condition", exp, "Side", side))
it <- stor_ttests[[exp]][[side]]
print("signf. from t step")
print(fromwhen <- 102-sum(it[,2]<.05))
print("mean t")
print(mean(it[,1][fromwhen:101]))
print(mean(it[,3]))
}
}
stor_ttests[[3]][[2]]
# analyze
for(exp in 1:3) {
for(side in 1:2) {
print(paste("Condition", exp, "Side", side))
it <- stor_ttests[[exp]][[side]]
print("signf. from t step")
print(fromwhen <- 102-sum(it[,2]<.05))
print("mean t")
print(mean(it[,1][fromwhen:101]))
print(mean(it[,3]))
}
}
setwd("G:/bisectionpaper/_repository/4_Code")
pdf("Figure1_v2.pdf", height = 4, width=8)
error_bars <- FALSE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 2:1) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="<- left      Bias(Pixel)      right ->",
xlab="Normalized time",
cex.lab=1.1, main="9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
pdf("Figure1_v2.pdf", height = 4, width=8)
error_bars <- FALSE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="<- left      Bias(Pixel)      right ->",
xlab="Normalized time",
cex.lab=1.1, main="9-Dot right",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="9-Dot left", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,side], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
side <- 2
abs(side-3)
side <- 1
abs(side-3)
pdf("Figure1_v2.pdf", height = 4, width=8)
error_bars <- FALSE
lmat <- matrix(c(1,2), 1, 2)
lo <- layout(lmat, widths=c(.355,.32), heights=c(6))
for(side in 1:2) {
#setting up plotting areas
if(side==1) {
par(mar=c(3.5,3,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="<- left      Bias(Pixel)      right ->",
xlab="Normalized time",
cex.lab=1.1, main="9-Dot left",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
} else {
par(mar=c(3.5,.5,3,.5))
plot(1, type='n', xlim=c(0,100), ylim=c(-6,6), ylab="",
xlab="Normalized time",
cex.lab=1.1, main="9-Dot right", yaxt="n",
mgp=c(2,.5,0))
#lines(0:100,rep(0,101), lty=1, col="grey")
}
#plotting data
for(exp in 1:3)
{
dd <- l.stor[[exp]]
colnames(dd) <- c("x_left","x_right", "se_xl", "se_xr")
lines(dd[,abs(side-3)], type="l", ylim=c(-8,8), lty=exp, lwd=2)
if(error_bars==TRUE)
{
lines(dd[,side]+dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
lines(dd[,side]-dd[,side+2], type="l", ylim=c(-8,8), lty=exp, lwd=1)
}
}
#legend
if(side==2) {
legend(50,6,
c("Aggregate area", "Contour length", "Subtended area"),
lty=c(1:3),
cex=0.83)
}
}
dev.off()
